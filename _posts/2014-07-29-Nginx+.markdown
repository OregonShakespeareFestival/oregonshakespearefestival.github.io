---
layout: post
title:  "Nginx+ Configuration"
date:   2014-07-29 15:30:52
categories: Network
---

###Nginx+
---------------------------
Nginx 

###Nginx+ Roles
---------------------------

*  Production Load Balancer
*  Development Load Balancer
*  Reverse Proxy

###Nginx Config
---------------------------

From this point on we will deal primarily with files located in nginx+'s default configuration directory `/etc/nginx/`
In the main config file `nginx.conf` there are several important options to set.

####Worker Threads
To scale nginx we increased the number of worker threads with by setting `worker_processes  4;`.

####Logging Levels
Additional logging levels can be enabled by appending `notice` or `info` etc to the line `error_log /var/log/nginx/error.log;`, for example: `error_log /var/log/nginx/error.log notice;`.

####Additional Configs
Finally we end our configuration with `include /etc/nginx/conf.d/*.conf` which allows us to separate our webserver configs.

###Load Balancing
---------------------------
For load balancing upstream zones must be defined that adhere to the following pattern

    upstream <zone-name>
    {
        zone <zone-name> <memory-allocation>;
        <loadbalancing-style>;
        server <ip>:<port> <arguments>;
        <additional-options>;
    }

An example ripped from one of our test environments uses a least number of connections load balancing style and uses health checks to remove overloaded servers from the load balancing pool

    upstream wwwd-backend
    {
            zone wwwd-backend 128k;
            ip_hash;
            least_conn;
            server 172.16.20.26:80 max_fails=5 fail_timeout=10s slow_start=30s;
            server 172.16.20.27:80 max_fails=5 fail_timeout=10s slow_start=30s;
            keepalive 32;
    }

####Upstream Options
*   `ip_hash` enables sticky sessions so a patron will stick with a single server as the browse the site.
*   `least_conn` is the load balancing style that nginx employs when selecting webservers to route trafic to.
*   `max_fails` is the threshold of concurrent failed requests that nginx uses to determine server health.
*   `fail_timeout` is the interval that nginx will wait before it begins probing a webserver again.
*   `slow_start` is the interval during which nginx will route a reduced amount of traffic to the webserver after it passes health checks.
*   `keepalive` defines how many connections to keep active between each worker thread and upstream servers.

###Status Pages
---------------------------
Two nginx status pages have been enabled which are defined in the files status.conf and nginx-status.conf

###Zabbix Monitoring
---------------------------
Zabbix is used for proactive 

###Puppet Deployment
---------------------------
We manage our Nginx+ deployments using two puppet modules.  One module deploys our ssl certificates to the server while the second module manages the yum repository for nginx plus and tracks configuration files.
